headersOrigin = "inline"
redirectsOrigin = "inline"

[dev]
command = "npm run dev"
port = 3000.0
targetPort = 3000.0
autoLaunch = false

[images]
remote_images = ["^(?:http(?:s)?:\\/\\/images\\.unsplash\\.com(?:\\/(?!\\.)(?:(?:(?!(?:^|\\/)\\.).)*?)|$))$", "^(?:http(?:s)?:\\/\\/lh3\\.googleusercontent\\.com(?:\\/(?!\\.)(?:(?:(?!(?:^|\\/)\\.).)*?)|$))$"]

[functions]

[functions."*"]
node_bundler = "esbuild"

[[plugins]]
origin = "default"
package = "@netlify/plugin-nextjs"

[plugins.inputs]

[build]
publish = "C:\\Users\\LENOVO\\Desktop\\cursor\\.next"
publishOrigin = "config"
commandOrigin = "config"
command = "npm run build"

[build.environment]
NEXT_TELEMETRY_DISABLED = "1"
SECRETS_SCAN_OMIT_PATHS = "*.md,*.txt,MARKETFLOW_TRANSFORMATION_SUMMARY.md,GOOGLE_AUTH_SETUP.md,NETLIFY_SETUP.md,QUICK_START_GUIDE.md,IMPLEMENTATION_SUMMARY.md"
SECRETS_SCAN_OMIT_KEYS = "NEXT_PUBLIC_SUPABASE_URL,NEXT_PUBLIC_SUPABASE_ANON_KEY,NEXT_PUBLIC_FIREBASE_API_KEY"

[build.processing]

[build.processing.css]

[build.processing.html]

[build.processing.images]

[build.processing.js]

[build.services]

[[headers]]
for = "/*"

[headers.values]
X-Frame-Options = "DENY"
X-Content-Type-Options = "nosniff"
Referrer-Policy = "strict-origin-when-cross-origin"
Permissions-Policy = "camera=(), microphone=(), geolocation=()"

[[headers]]
for = "/static/*"

[headers.values]
Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
for = "/_next/static/*"

[headers.values]
Cache-Control = "public, max-age=31536000, immutable"

[[redirects]]
from = "/*"
to = "/index.html"
status = 200.0
force = false

[redirects.query]

[redirects.conditions]

[redirects.headers]

[[redirects]]
from = "/_next/image"
to = "/.netlify/images?url=:url&w=:width&q=:quality"
status = 200.0
force = false

[redirects.query]
url = ":url"
w = ":width"
q = ":quality"

[redirects.conditions]

[redirects.headers]

[[redirects]]
from = "/_ipx/*"
to = "/.netlify/images?url=:url&w=:width&q=:quality"
status = 200.0
force = false

[redirects.query]
url = ":url"
w = ":width"
q = ":quality"

[redirects.conditions]

[redirects.headers]